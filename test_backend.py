#!/usr/bin/env python3
"""
Script de teste para o backend Sonhos Lus√≠adas
"""

import sys
import os

# Adiciona o diret√≥rio do backend ao path
backend_path = os.path.join(os.path.dirname(__file__), 'sonhos-lusiadas-backend', 'src')
sys.path.insert(0, backend_path)

try:
    print("üîç Testando importa√ß√µes...")
    
    # Testa importa√ß√£o do Flask
    from flask import Flask
    print("‚úÖ Flask importado com sucesso")
    
    # Testa importa√ß√£o dos m√≥dulos customizados
    from preprocessing import TextPreprocessor
    print("‚úÖ TextPreprocessor importado com sucesso")
    
    from semantic_expansion import SemanticExpander
    print("‚úÖ SemanticExpander importado com sucesso")
    
    from search_analysis import ContextAnalyzer
    print("‚úÖ ContextAnalyzer importado com sucesso")
    
    from visualization import DataVisualizer
    print("‚úÖ DataVisualizer importado com sucesso")
    
    # Testa cria√ß√£o de inst√¢ncias
    print("\nüîß Testando cria√ß√£o de inst√¢ncias...")
    
    preprocessor = TextPreprocessor()
    print("‚úÖ TextPreprocessor criado com sucesso")
    
    expander = SemanticExpander()
    print("‚úÖ SemanticExpander criado com sucesso")
    
    analyzer = ContextAnalyzer()
    print("‚úÖ ContextAnalyzer criado com sucesso")
    
    visualizer = DataVisualizer()
    print("‚úÖ DataVisualizer criado com sucesso")
    
    # Testa processamento b√°sico
    print("\nüìù Testando processamento b√°sico...")
    
    test_text = "Este √© um sonho de gl√≥ria e vis√£o prof√©tica."
    processed = preprocessor.preprocess(test_text)
    print(f"‚úÖ Texto processado: {processed}")
    
    # Testa expans√£o sem√¢ntica
    expansion = expander.get_comprehensive_expansion()
    print(f"‚úÖ Expans√£o sem√¢ntica: {len(expansion['combined_expansion'])} palavras")
    
    print("\nüéâ Todos os testes passaram! O backend est√° funcionando corretamente.")
    
except ImportError as e:
    print(f"‚ùå Erro de importa√ß√£o: {e}")
    sys.exit(1)
except Exception as e:
    print(f"‚ùå Erro inesperado: {e}")
    sys.exit(1)
